name: Build

on: push

jobs:
  build_linux:
    name: Build linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Get Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build With Cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: anime_linux
          path: target/release/anime

  build_macos:
    name: Build Macos
    runs-on: macos-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Get Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build With Cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: anime_macos
          path: target/release/anime

  release:
    name: Release
    needs: [build_linux, build_macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Delete Release
        uses: ame-yu/action-delete-latest-release@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 1.0
          release_name: Main Release
          body: Main Release

      - name: Upload Linux Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: anime_linux/anime
          asset_name: anime_linux
          asset_content_type: application/executable

      - name: Upload Macos Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: anime_macos/anime
          asset_name: anime_macos
          asset_content_type: application/executable
